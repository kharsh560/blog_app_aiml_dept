# New config, now serving frontend also using nginx:-

# Redirect all HTTP to HTTPS
server {
    listen 80;
    server_name mait-aimldept-blogapp.live;
    location / {
        return 301 https://$host$request_uri;
    }
}

# HTTPS server
server {
    listen 443 ssl;
    server_name mait-aimldept-blogapp.live;

    # SSL certificate paths (adjust filenames if needed)
    ssl_certificate     /etc/nginx/certs/fullchain.pem;
    ssl_certificate_key /etc/nginx/certs/privkey.pem;

    # Proxy API requests to the backend container
    location /api/ {
        proxy_pass http://backend:4800;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Serve static files from the frontend build folder
    location / {
        root /usr/share/nginx/html;
        try_files $uri /index.html;
    }
}








# # Redirect all HTTP to HTTPS
# server {
#     listen 80;
#     server_name mait-aimldept-blogapp.live;

#     location / {
#         return 301 https://$host$request_uri;
#     }
# }

# # HTTPS server
# server {
#     listen 443 ssl;
#     server_name mait-aimldept-blogapp.live;

#     # SSL certificate paths (adjust filenames to your actual cert names)
#     ssl_certificate     /etc/nginx/certs/fullchain.pem;
#     ssl_certificate_key /etc/nginx/certs/privkey.pem;

#     # Proxy pass everything at "/" to the Node.js container
#     location / {
#         proxy_pass http://backend:4800; 
#         proxy_http_version 1.1;

#         # WebSocket and connection headers
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection "upgrade";
#         proxy_set_header Host $host;
#         proxy_cache_bypass $http_upgrade;

#         # CORS headers
#         add_header Access-Control-Allow-Origin "https://mait-aiml-official-blogspace.netlify.app";
#         add_header Access-Control-Allow-Methods "GET, POST, OPTIONS, PUT, DELETE";
#         add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization";
#         add_header Access-Control-Allow-Credentials true;
        
#         # Handle preflight OPTIONS request
#         if ($request_method = OPTIONS) {
#             return 204;
#         }
#     }
# }
